{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/s3-assets/webpack/bootstrap","webpack://@fof/s3-assets/webpack/runtime/compat get default export","webpack://@fof/s3-assets/webpack/runtime/define property getters","webpack://@fof/s3-assets/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/s3-assets/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/s3-assets/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/s3-assets/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/s3-assets/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/s3-assets/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@fof/s3-assets/./src/admin/components/S3SettingsPage.tsx","webpack://@fof/s3-assets/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/s3-assets/./src/admin/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport type Mithril from 'mithril';\n\ntype AwsRegion = {\n  value: string;\n  label: string;\n};\n\nexport default class S3SettingsPage extends ExtensionPage {\n  s3SetByEnv!: boolean;\n  settingPrefix!: string;\n  awsRegions!: AwsRegion[];\n\n  oninit(vnode: Mithril.Vnode) {\n    super.oninit(vnode);\n\n    this.awsRegions = app.data.FoFS3Regions as AwsRegion[];\n    this.s3SetByEnv = app.data.s3SetByEnv as boolean;\n    this.settingPrefix = app.data.FoFS3ShareWithFoFUpload ? 'fof-upload.' : 'fof-s3-assets.';\n  }\n\n  content() {\n    return (\n      <div className=\"S3SettingsPage\">\n        <div className=\"container\">\n          <div className=\"S3SettingsPageTabPage S3SettingsPage--settings\">\n            <div className=\"Form\">\n              {this.settingsItems().toArray()}\n              <div className=\"Form-group\">{this.submitButton()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  settingsItems(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'general',\n      <div className=\"Section\">\n        <h3>{app.translator.trans('fof-s3-assets.admin.settings.general.heading')}</h3>\n        <p className=\"helpText\">{app.translator.trans('fof-s3-assets.admin.settings.general.help')}</p>\n        {this.generalItems().toArray()}\n      </div>\n    );\n\n    !this.s3SetByEnv &&\n      items.add(\n        'aws-s3',\n        <div className=\"Section\">\n          <h3>{app.translator.trans('fof-s3-assets.admin.settings.aws-s3.heading')}</h3>\n          <p className=\"helpText\">{app.translator.trans('fof-s3-assets.admin.settings.aws-s3.help')}</p>\n          {this.awss3Items().toArray()}\n        </div>\n      );\n\n    !this.s3SetByEnv &&\n      items.add(\n        'aws-s3-compatible',\n        <div className=\"Section\">\n          <h3>{app.translator.trans('fof-s3-assets.admin.settings.aws-s3-compatible.heading')}</h3>\n          <p className=\"helpText\">{app.translator.trans('fof-s3-assets.admin.settings.aws-s3-compatible.help')}</p>\n          {this.awss3CompatibleItems().toArray()}\n        </div>\n      );\n\n    return items;\n  }\n\n  generalItems(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    app.initializers.has('fof-upload') &&\n      !this.s3SetByEnv &&\n      items.add(\n        'shareWithFoFUpload',\n        this.buildSettingComponent({\n          setting: 'fof-s3-assets.share_s3_config_with_fof_upload',\n          type: 'boolean',\n          label: app.translator.trans('fof-s3-assets.admin.settings.general.shareWithFoFUpload.label'),\n          help: app.translator.trans('fof-s3-assets.admin.settings.general.shareWithFoFUpload.help'),\n        })\n      );\n\n    // If there are no items, add a placeholder.\n    if (items.toArray().length === 0 && this.s3SetByEnv) {\n      items.add('setByEnv', <Placeholder text={app.translator.trans('fof-s3-assets.admin.settings.general.configured_by_environment')} />);\n    }\n\n    return items;\n  }\n\n  awss3Items(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'awsS3Key',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3Key`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3key.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3key.help'),\n      })\n    );\n\n    items.add(\n      'awsS3Secret',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3Secret`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3secret.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3secret.help'),\n      })\n    );\n\n    items.add(\n      'awsS3Region',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3Region`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3region.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3region.help'),\n      })\n    );\n\n    items.add(\n      'awsS3Bucket',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3Bucket`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3bucket.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3bucket.help'),\n      })\n    );\n\n    items.add(\n      'awsS3ACL',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3ACL`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3acl.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3acl.help'),\n      })\n    );\n\n    items.add(\n      'awsS3CacheControl',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3CacheControl`,\n        type: 'number',\n        min: 0,\n        label: app.translator.trans('fof-s3-assets.admin.settings.aws-s3.cache-control.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.aws-s3.cache-control.help'),\n      })\n    );\n\n    return items;\n  }\n\n  awss3CompatibleItems(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'cdnUrl',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}cdnUrl`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3url.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3url.help'),\n      })\n    );\n\n    items.add(\n      'awsS3Endpoint',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3Endpoint`,\n        type: 'string',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3endpoint.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3endpoint.help'),\n      })\n    );\n\n    items.add(\n      'awsS3UsePathStyleEndpoint',\n      this.buildSettingComponent({\n        setting: `${this.settingPrefix}awsS3UsePathStyleEndpoint`,\n        type: 'boolean',\n        label: app.translator.trans('fof-s3-assets.admin.settings.s3path-style-endpoint.label'),\n        help: app.translator.trans('fof-s3-assets.admin.settings.s3path-style-endpoint.help'),\n      })\n    );\n\n    return items;\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import app from 'flarum/admin/app';\nimport S3SettingsPage from './components/S3SettingsPage';\n\napp.initializers.add('fof/s3-assets', () => {\n  app.extensionData.for('fof-s3-assets').registerPage(S3SettingsPage);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","S3SettingsPage","_ExtensionPage","_this","_len","arguments","length","args","Array","_key","apply","concat","s3SetByEnv","settingPrefix","awsRegions","create","constructor","_proto","oninit","vnode","this","app","FoFS3Regions","FoFS3ShareWithFoFUpload","content","m","className","settingsItems","toArray","submitButton","items","ItemList","add","trans","generalItems","awss3Items","awss3CompatibleItems","has","buildSettingComponent","setting","type","label","help","Placeholder","text","min","ExtensionPage","registerPage"],"sourceRoot":""}